// lib/firebase.js (safer)
import admin from 'firebase-admin';
import fs from 'fs';
import path from 'path';

const serviceAccountPath = process.env.FIREBASE_SERVICE_ACCOUNT || './serviceAccountKey.json';
let db = null;

function fileExists(p) {
  try {
    return fs.existsSync(p) && fs.statSync(p).isFile();
  } catch (e) {
    return false;
  }
}

if (process.env.USE_FIRESTORE === 'true') {
  if (!fileExists(serviceAccountPath)) {
    console.warn(`[lib/firebase] USE_FIRESTORE=true but service account file not found at: ${serviceAccountPath}`);
    console.warn('[lib/firebase] Firestore disabled to avoid crash. Set USE_FIRESTORE=false or provide valid service account.');
  } else {
    try {
      const serviceAccount = JSON.parse(fs.readFileSync(serviceAccountPath));
      if (!admin.apps.length) {
        admin.initializeApp({
          credential: admin.credential.cert(serviceAccount),
        });
      }
      db = admin.firestore();
      console.log('[lib/firebase] Firestore initialized.');
    } catch (err) {
      console.error('[lib/firebase] Failed to init Firestore:', err.message);
      db = null;
    }
  }
} else {
  // not using firestore
  db = null;
}

export { db };
export default db;

